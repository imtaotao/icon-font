const fs = require('fs')
const opn = require('opn')
const path = require('path')
const { warn } = require('./utils')

function genHTMLTemplate (unitText, cssText, additional) {
  return '<!DOCTYPE html>\n' +
  '<html lang="en">\n' +
  '<head>\n\t' +
    '<meta charset="UTF-8">\n\t' +
    '<meta name="description" content="An Icon Font Generated By IconFont">\n\t' +
    '<meta name="viewport" content="width=device-width, initial-scale=1.0">\n\t' +
    '<title>IconFont Demo</title>\n\t' +
    '<style>\n' +
      cssText + '\n' +
      additional + '\n\t' +
    '</style>\n' +
  '</head>\n' +
  '<body>\n\t' +
  unitText +
  '</body>\n' +
  '</html>'
}

function genUnitText (map) {
  let res = ''
  const unit = name => `<div class="icon-${name}"></div>`
  
  map.forEach((icon, i) => {
    res += unit(icon.name) + (
      i === map.length - 1
      ? '\n'
      : '\n\t'
    )
  })
  return res
}

function additionalStyles () {
  return 'div {\n\t' +
    'float: left;\n\t' +
    'margin: 10px;\n\t' +
    'border: 1px solid #f1f1f1;\n\t' +
  '}'
}

function addWrap (cssText) {
  const lines = cssText.split('\n').map(val => '\t\t' + val)
  return lines.join('\n')
}

function createFile (template, { to, open }, filename) {
  const url = path.resolve(to, filename)
  const stream = fs.createWriteStream(url)

  stream.end(template, () => {
    // 打开 demo.html
    open && opn(url)
  })
}

module.exports = function genTemplate (map, opts, cssText) {
  const unitText = genUnitText(map)
  const additionalText = addWrap(additionalStyles())
  const template = genHTMLTemplate(unitText, addWrap(cssText), additionalText)

  createFile(template, opts, 'demo.html')
}